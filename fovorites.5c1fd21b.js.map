{"mappings":"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","sources":["<anon>","src/index.js","src/js/exercises/exercises.js","src/js/exercises/getMuscleExercises.js","src/js/exercises/getExercisesByUrl.js","src/js/exercises/exercises-marup/muscleExercisesMarkup.js","src/js/exercises/getBodyPartsExercises.js","src/js/exercises/exercises-marup/bodyPartsExercisesMarkup.js","src/js/footer.js","src/js/favorites.js"],"sourcesContent":["(function () {\nasync function $6ff6c4f9bba1ed17$export$2e2bcd8739ae039(url) {\n    try {\n        const res = await fetch(url);\n        const data = await res.json();\n        return data;\n    } catch (err) {\n        console.log(\"err\", err);\n    }\n}\n\n\nfunction $38155005c9ffd9a0$export$2e2bcd8739ae039({ name: name, filter: filter }) {\n    return `<li class=\"exercises__item\">\n    <div class=\"exercises__wrap\">\n        <h3 class=\"exercises-card__title\">${name[0].toUpperCase() + name.slice(1)}</h3>\n        <p class=\"exercises-card__category\">${filter}</p>\n    </div>\n   </li>`;\n}\n\n\nconst $09f6f309be53b353$var$exercisesListRef = document.querySelector(\".exercises__list\");\nconst $09f6f309be53b353$var$exercisesPaginationRef = document.querySelector(\".exercises-cards__pagination\");\nfunction $09f6f309be53b353$export$2e2bcd8739ae039() {\n    let activeButton = null;\n    const loadExercises = (url)=>{\n        (0, $6ff6c4f9bba1ed17$export$2e2bcd8739ae039)(url).then((data)=>{\n            $09f6f309be53b353$var$exercisesListRef.innerHTML = \"\";\n            data.results.forEach((exercise)=>{\n                $09f6f309be53b353$var$exercisesListRef.insertAdjacentHTML(\"afterbegin\", (0, $38155005c9ffd9a0$export$2e2bcd8739ae039)(exercise));\n                const exerciseItem = document.querySelector(\".exercises__item\");\n                if (exerciseItem) exerciseItem.style.backgroundImage = `linear-gradient(\n            0deg,\n            rgba(16, 16, 16, 0.7) 0%,\n            rgba(16, 16, 16, 0.7) 100%\n          ), url(${exercise.imgUrl})`;\n            });\n        });\n    };\n    const setupPagination = (totalPages)=>{\n        $09f6f309be53b353$var$exercisesPaginationRef.innerHTML = \"\";\n        for(let i = 0; i < totalPages; i++)$09f6f309be53b353$var$exercisesPaginationRef.insertAdjacentHTML(\"beforeend\", `<li class=\"exercises-pagination__item\">\n          <button class=\"exercises-cards__page\">${i + 1}</button>\n        </li>`);\n        activeButton = $09f6f309be53b353$var$exercisesPaginationRef.querySelector(\"button\");\n        if (activeButton) activeButton.classList.add(\"exercises-active-page\");\n    };\n    (0, $6ff6c4f9bba1ed17$export$2e2bcd8739ae039)(`https://energyflow.b.goit.study/api/filters?filter=Muscles&page=1&limit=12`).then((data)=>{\n        setupPagination(data.totalPages);\n        loadExercises(`https://energyflow.b.goit.study/api/filters?filter=Muscles&page=1&limit=12`);\n        $09f6f309be53b353$var$exercisesPaginationRef.addEventListener(\"click\", (evt)=>{\n            if (evt.target.nodeName !== \"BUTTON\") return;\n            if (activeButton) activeButton.classList.remove(\"exercises-active-page\");\n            activeButton = evt.target;\n            activeButton.classList.add(\"exercises-active-page\");\n            const page = evt.target.textContent;\n            loadExercises(`https://energyflow.b.goit.study/api/filters?filter=Muscles&page=${page}&limit=12`);\n        });\n    });\n}\n\n\n\nfunction $dc87c79a6920d251$export$2e2bcd8739ae039({ rating: rating, name: name, burnedCalories: burnedCalories, time: time, bodyPart: bodyPart, target: target }) {\n    return `<li class=\"body-parts__item\">\n    <div class=\"body-parts-header-box\">\n      <div class=\"body-parts-header-train-box\">\n        <p class=\"body-parts-workout__text\">WORKOUT</p>\n        <p class=\"body-parts-raiting__text\">\n          ${rating}<span class=\"body-parts-raiting__span\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"16\" viewBox=\"0 0 14 13\" fill=\"none\">\n            <path d=\"M6.04894 0.927052C6.3483 0.0057416 7.6517 0.00574088 7.95106 0.927052L8.79611 3.52786C8.92999 3.93989 9.31394 4.21885 9.74717 4.21885H12.4818C13.4505 4.21885 13.8533 5.45846 13.0696 6.02786L10.8572 7.63525C10.5067 7.8899 10.3601 8.34127 10.494 8.75329L11.339 11.3541C11.6384 12.2754 10.5839 13.0415 9.80017 12.4721L7.58779 10.8647C7.2373 10.6101 6.7627 10.6101 6.41222 10.8647L4.19983 12.4721C3.41612 13.0415 2.36164 12.2754 2.66099 11.3541L3.50604 8.75329C3.63992 8.34127 3.49326 7.8899 3.14277 7.63525L0.930391 6.02787C0.146677 5.45846 0.549452 4.21885 1.51818 4.21885H4.25283C4.68606 4.21885 5.07001 3.93989 5.20389 3.52786L6.04894 0.927052Z\" fill=\"#EEA10C\"/>\n          </svg>\n        </span>\n        </p>\n      </div>\n      <div class=\"body-parts-header-start-box\">\n        <p class=\"body-parts-start__text\">\n          Start\n          <span class=\"body-parts-start__span\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n              <path d=\"M7.5 14L14 7.5M14 7.5L7.5 1M14 7.5H1\" stroke=\"#1B1B1B\" stroke-width=\"1.3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n        </span>\n        </p>\n      </div>\n    </div>\n    <h2 class=\"body-parts__title\">\n      <span class=\"body-parts-title__span\">\n        <svg width=\"14\" height=\"16\">\n          <use href=\"../images/symbol-defs.svg#icon-running\"></use>\n        </svg>\n      </span>\n      ${name[0].toUpperCase() + name.slice(1)}\n    </h2>\n    <div class=\"body-parts-about-box\">\n      <p class=\"body-parts-about__title\">\n        Burned calories:\n        <span class=\"body-parts-about__span\">${burnedCalories} / ${time} min</span>\n      </p>\n      <p class=\"body-parts-about__title\">\n        Body part: <span class=\"body-parts-about__span\">${bodyPart[0].toUpperCase() + bodyPart.slice(1)}</span>\n      </p>\n      <p class=\"body-parts-about__title\">\n        Target: <span class=\"body-parts-about__span\">${target[0].toUpperCase() + target.slice(1)}</span>\n      </p>\n    </div>\n  </li>`;\n}\n\n\nconst $15a2abf3cf29a423$var$exercisesListRef = document.querySelector(\".exercises__list\");\nconst $15a2abf3cf29a423$var$exercisesPaginationRef = document.querySelector(\".exercises-cards__pagination\");\nfunction $15a2abf3cf29a423$export$2e2bcd8739ae039() {\n    let activeButton = null;\n    const loadExercises = (url)=>{\n        (0, $6ff6c4f9bba1ed17$export$2e2bcd8739ae039)(url).then((data)=>{\n            $15a2abf3cf29a423$var$exercisesListRef.innerHTML = \"\";\n            data.results.forEach((exercise)=>{\n                $15a2abf3cf29a423$var$exercisesListRef.insertAdjacentHTML(\"beforeend\", (0, $dc87c79a6920d251$export$2e2bcd8739ae039)(exercise));\n            });\n        });\n    };\n    const setupPagination = (totalPages)=>{\n        $15a2abf3cf29a423$var$exercisesPaginationRef.innerHTML = \"\";\n        for(let i = 0; i < totalPages; i++)$15a2abf3cf29a423$var$exercisesPaginationRef.insertAdjacentHTML(\"beforeend\", `<li class=\"exercises-pagination__item\">\n          <button class=\"exercises-cards__page\">${i + 1}</button>\n        </li>`);\n        activeButton = $15a2abf3cf29a423$var$exercisesPaginationRef.querySelector(\"button\");\n        if (activeButton) activeButton.classList.add(\"exercises-active-page\");\n    };\n    (0, $6ff6c4f9bba1ed17$export$2e2bcd8739ae039)(`https://energyflow.b.goit.study/api/exercises?page=1&bodypart=waist&limit=9`).then((data)=>{\n        setupPagination(data.totalPages);\n        loadExercises(`https://energyflow.b.goit.study/api/exercises?page=1&bodypart=waist&limit=9`);\n        $15a2abf3cf29a423$var$exercisesPaginationRef.addEventListener(\"click\", (evt)=>{\n            if (evt.target.nodeName !== \"BUTTON\") return;\n            if (activeButton) activeButton.classList.remove(\"exercises-active-page\");\n            activeButton = evt.target;\n            activeButton.classList.add(\"exercises-active-page\");\n            const page = evt.target.textContent;\n            loadExercises(`https://energyflow.b.goit.study/api/exercises?page=${page}&bodypart=waist&limit=9`);\n        });\n    });\n}\n\n\nconst $96f49549919f5a6c$var$exercisesListRef = document.querySelector(\".exercises__list\");\nconst $96f49549919f5a6c$var$exercisesBtnsListRef = document.querySelector(\".exercises-btns__list\");\nconst $96f49549919f5a6c$var$exercisesPaginationRef = document.querySelector(\".exercises-cards__pagination\");\n(0, $09f6f309be53b353$export$2e2bcd8739ae039)();\n$96f49549919f5a6c$var$exercisesBtnsListRef.addEventListener(\"click\", (evt)=>{\n    if (evt.target.nodeName === \"UL\" || evt.target.nodeName === \"LI\") return;\n    $96f49549919f5a6c$var$exercisesListRef.innerHTML = ``;\n    $96f49549919f5a6c$var$exercisesPaginationRef.innerHTML = ``;\n    if (evt.target.hasAttribute(\"data-muscles\")) (0, $09f6f309be53b353$export$2e2bcd8739ae039)();\n    if (evt.target.hasAttribute(\"data-body-parts\")) (0, $15a2abf3cf29a423$export$2e2bcd8739ae039)();\n}); // fetch(\n //   `https://energyflow.b.goit.study/api/filters?filter=Muscles&page=2`\n // )\n //   .then(res => res.json())\n //   .then(data => {\n //     console.log(data);\n //   });\n\n\nconst $54de3f865ab67589$var$url = `https://energyflow.b.goit.study/api/subscription`;\nconst $54de3f865ab67589$var$formUsers = document.querySelector(\".footer__form\");\n// console.log(url)\nfunction $54de3f865ab67589$var$addUsers(newUsers) {\n    return fetch($54de3f865ab67589$var$url, {\n        method: \"POST\",\n        body: JSON.stringify(newUsers),\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\"\n        }\n    }).then((res)=>res.json()).then((res)=>console.log(res)).catch((error)=>console.log(error));\n}\n$54de3f865ab67589$var$formUsers.addEventListener(\"submit\", (e)=>{\n    e.preventDefault();\n    const newUsers = {\n        email: e.currentTarget.elements.email.value\n    };\n    console.log(newUsers);\n    $54de3f865ab67589$var$addUsers(newUsers);\n    e.currentTarget.reset();\n});\n\n\nconst $6befdf793f7dd1b0$var$favoritesList = document.querySelector(\".favorites-exercises__list\");\nlocalStorage.setItem(\"favorites\", JSON.stringify([\n    {\n        \"name\": \"ga\"\n    }\n]));\nif (localStorage.getItem(\"favorites\")) {\n    const favorites = JSON.parse(localStorage.getItem(\"favorites\"));\n    if (favorites.length) $6befdf793f7dd1b0$var$favoritesMarkUp(favorites);\n    else $6befdf793f7dd1b0$var$favoritesList.innerHTML = `<div class=\"favorites-info\">\n        <img class=\"favorites-info-img\" src=\"../../images/favorites/dumbbell.png\" alt=\"dumbbell\">\n        <p class=\"favorites-info-text\">It appears that you haven't added any exercises to your favorites yet. To get started, you can add exercises that you like to your favorites for easier access in the future\\u{1F60A}</p>\n    </div>`;\n} else $6befdf793f7dd1b0$var$favoritesList.innerHTML = `<div class=\"favorites-info\">\n        <img class=\"favorites-info-img\" src=\"./images/favorites/dumbbell.png\" alt=\"dumbbell\">\n        <p class=\"favorites-info-text\">It appears that you haven't added any exercises to your favorites yet. To get started, you can add exercises that you like to your favorites for easier access in the future\\u{1F60A}</p>\n    </div>`;\nfunction $6befdf793f7dd1b0$var$favoritesMarkUp(array) {\n    const markUp = array.map((item)=>`<li class=\"exercises__item\">\n        <div class=\"exercises__wrap\">\n            <h3 class=\"exercises-card__title\">${item.name}</h3>\n            <p class=\"exercises-card__category\">${item.filter}</p>\n        </div>\n       </li>`);\n    $6befdf793f7dd1b0$var$favoritesList.innerHTML = markUp.join(\"\");\n}\n\n\nexercises, js;\nmain;\n\n})();\n//# sourceMappingURL=fovorites.5c1fd21b.js.map\n","exercises-js\nimport './js/exercises/exercises';\nimport './js/footer';\nimport './js/favorites';\nmain\n","import getMusclesExercises from './getMuscleExercises';\nimport getBodyPartsExercises from './getBodyPartsExercises';\n\nconst exercisesListRef = document.querySelector('.exercises__list');\nconst exercisesBtnsListRef = document.querySelector('.exercises-btns__list');\nconst exercisesPaginationRef = document.querySelector(\n  '.exercises-cards__pagination'\n);\n\ngetMusclesExercises();\n\nexercisesBtnsListRef.addEventListener('click', evt => {\n  if (evt.target.nodeName === 'UL' || evt.target.nodeName === 'LI') {\n    return;\n  }\n  exercisesListRef.innerHTML = ``;\n  exercisesPaginationRef.innerHTML = ``;\n\n  if (evt.target.hasAttribute('data-muscles')) {\n    getMusclesExercises();\n  }\n\n  if (evt.target.hasAttribute('data-body-parts')) {\n    getBodyPartsExercises();\n  }\n});\n\n// fetch(\n//   `https://energyflow.b.goit.study/api/filters?filter=Muscles&page=2`\n// )\n//   .then(res => res.json())\n//   .then(data => {\n//     console.log(data);\n//   });\n","import getExercisesByUrl from './getExercisesByUrl';\nimport muscleExercisesMarkup from './exercises-marup/muscleExercisesMarkup';\n\nconst exercisesListRef = document.querySelector('.exercises__list');\nconst exercisesPaginationRef = document.querySelector(\n  '.exercises-cards__pagination'\n);\n\nexport default function getMusclesExercises() {\n  let activeButton = null;\n\n  const loadExercises = url => {\n    getExercisesByUrl(url).then(data => {\n      exercisesListRef.innerHTML = '';\n      data.results.forEach(exercise => {\n        exercisesListRef.insertAdjacentHTML(\n          'afterbegin',\n          muscleExercisesMarkup(exercise)\n        );\n        const exerciseItem = document.querySelector('.exercises__item');\n        if (exerciseItem) {\n          exerciseItem.style.backgroundImage = `linear-gradient(\n            0deg,\n            rgba(16, 16, 16, 0.7) 0%,\n            rgba(16, 16, 16, 0.7) 100%\n          ), url(${exercise.imgUrl})`;\n        }\n      });\n    });\n  };\n\n  const setupPagination = totalPages => {\n    exercisesPaginationRef.innerHTML = '';\n    for (let i = 0; i < totalPages; i++) {\n      exercisesPaginationRef.insertAdjacentHTML(\n        'beforeend',\n        `<li class=\"exercises-pagination__item\">\n          <button class=\"exercises-cards__page\">${i + 1}</button>\n        </li>`\n      );\n    }\n    activeButton = exercisesPaginationRef.querySelector('button');\n    if (activeButton) {\n      activeButton.classList.add('exercises-active-page');\n    }\n  };\n\n  getExercisesByUrl(\n    `https://energyflow.b.goit.study/api/filters?filter=Muscles&page=1&limit=12`\n  ).then(data => {\n    setupPagination(data.totalPages);\n    loadExercises(\n      `https://energyflow.b.goit.study/api/filters?filter=Muscles&page=1&limit=12`\n    );\n\n    exercisesPaginationRef.addEventListener('click', evt => {\n      if (evt.target.nodeName !== 'BUTTON') {\n        return;\n      }\n      if (activeButton) {\n        activeButton.classList.remove('exercises-active-page');\n      }\n      activeButton = evt.target;\n      activeButton.classList.add('exercises-active-page');\n      const page = evt.target.textContent;\n      loadExercises(\n        `https://energyflow.b.goit.study/api/filters?filter=Muscles&page=${page}&limit=12`\n      );\n    });\n  });\n}\n","export default async function getExercisesByUrl(url) {\n  try {\n    const res = await fetch(url);\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log('err', err);\n  }\n}\n","export default function muscleExercisesMarkup({ name, filter }) {\n  return `<li class=\"exercises__item\">\n    <div class=\"exercises__wrap\">\n        <h3 class=\"exercises-card__title\">${\n          name[0].toUpperCase() + name.slice(1)\n        }</h3>\n        <p class=\"exercises-card__category\">${filter}</p>\n    </div>\n   </li>`;\n}\n","import getExercisesByUrl from './getExercisesByUrl';\nimport bodyPartsExercisesMarkup from './exercises-marup/bodyPartsExercisesMarkup';\n\nconst exercisesListRef = document.querySelector('.exercises__list');\nconst exercisesPaginationRef = document.querySelector(\n  '.exercises-cards__pagination'\n);\n\nexport default function getBodyPartsExercises() {\n  let activeButton = null;\n\n  const loadExercises = url => {\n    getExercisesByUrl(url).then(data => {\n      exercisesListRef.innerHTML = '';\n      data.results.forEach(exercise => {\n        exercisesListRef.insertAdjacentHTML(\n          'beforeend',\n          bodyPartsExercisesMarkup(exercise)\n        );\n      });\n    });\n  };\n\n  const setupPagination = totalPages => {\n    exercisesPaginationRef.innerHTML = '';\n    for (let i = 0; i < totalPages; i++) {\n      exercisesPaginationRef.insertAdjacentHTML(\n        'beforeend',\n        `<li class=\"exercises-pagination__item\">\n          <button class=\"exercises-cards__page\">${i + 1}</button>\n        </li>`\n      );\n    }\n    activeButton = exercisesPaginationRef.querySelector('button');\n    if (activeButton) {\n      activeButton.classList.add('exercises-active-page');\n    }\n  };\n\n  getExercisesByUrl(\n    `https://energyflow.b.goit.study/api/exercises?page=1&bodypart=waist&limit=9`\n  ).then(data => {\n    setupPagination(data.totalPages);\n    loadExercises(\n      `https://energyflow.b.goit.study/api/exercises?page=1&bodypart=waist&limit=9`\n    );\n\n    exercisesPaginationRef.addEventListener('click', evt => {\n      if (evt.target.nodeName !== 'BUTTON') {\n        return;\n      }\n      if (activeButton) {\n        activeButton.classList.remove('exercises-active-page');\n      }\n      activeButton = evt.target;\n      activeButton.classList.add('exercises-active-page');\n      const page = evt.target.textContent;\n      loadExercises(\n        `https://energyflow.b.goit.study/api/exercises?page=${page}&bodypart=waist&limit=9`\n      );\n    });\n  });\n}\n","export default function bodyPartsExercisesMarkup({\n  rating,\n  name,\n  burnedCalories,\n  time,\n  bodyPart,\n  target,\n}) {\n  return `<li class=\"body-parts__item\">\n    <div class=\"body-parts-header-box\">\n      <div class=\"body-parts-header-train-box\">\n        <p class=\"body-parts-workout__text\">WORKOUT</p>\n        <p class=\"body-parts-raiting__text\">\n          ${rating}<span class=\"body-parts-raiting__span\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"16\" viewBox=\"0 0 14 13\" fill=\"none\">\n            <path d=\"M6.04894 0.927052C6.3483 0.0057416 7.6517 0.00574088 7.95106 0.927052L8.79611 3.52786C8.92999 3.93989 9.31394 4.21885 9.74717 4.21885H12.4818C13.4505 4.21885 13.8533 5.45846 13.0696 6.02786L10.8572 7.63525C10.5067 7.8899 10.3601 8.34127 10.494 8.75329L11.339 11.3541C11.6384 12.2754 10.5839 13.0415 9.80017 12.4721L7.58779 10.8647C7.2373 10.6101 6.7627 10.6101 6.41222 10.8647L4.19983 12.4721C3.41612 13.0415 2.36164 12.2754 2.66099 11.3541L3.50604 8.75329C3.63992 8.34127 3.49326 7.8899 3.14277 7.63525L0.930391 6.02787C0.146677 5.45846 0.549452 4.21885 1.51818 4.21885H4.25283C4.68606 4.21885 5.07001 3.93989 5.20389 3.52786L6.04894 0.927052Z\" fill=\"#EEA10C\"/>\n          </svg>\n        </span>\n        </p>\n      </div>\n      <div class=\"body-parts-header-start-box\">\n        <p class=\"body-parts-start__text\">\n          Start\n          <span class=\"body-parts-start__span\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n              <path d=\"M7.5 14L14 7.5M14 7.5L7.5 1M14 7.5H1\" stroke=\"#1B1B1B\" stroke-width=\"1.3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n        </span>\n        </p>\n      </div>\n    </div>\n    <h2 class=\"body-parts__title\">\n      <span class=\"body-parts-title__span\">\n        <svg width=\"14\" height=\"16\">\n          <use href=\"../images/symbol-defs.svg#icon-running\"></use>\n        </svg>\n      </span>\n      ${name[0].toUpperCase() + name.slice(1)}\n    </h2>\n    <div class=\"body-parts-about-box\">\n      <p class=\"body-parts-about__title\">\n        Burned calories:\n        <span class=\"body-parts-about__span\">${burnedCalories} / ${\n    time\n  } min</span>\n      </p>\n      <p class=\"body-parts-about__title\">\n        Body part: <span class=\"body-parts-about__span\">${\n          bodyPart[0].toUpperCase() + bodyPart.slice(1)\n        }</span>\n      </p>\n      <p class=\"body-parts-about__title\">\n        Target: <span class=\"body-parts-about__span\">${\n          target[0].toUpperCase() + target.slice(1)\n        }</span>\n      </p>\n    </div>\n  </li>`;\n}\n","const url = `https://energyflow.b.goit.study/api/subscription`;\nconst formUsers = document.querySelector(\".footer__form\");\n// console.log(url)\n\nfunction addUsers(newUsers) {\n    return fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(newUsers),\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\",\n        },\n    }).then(res =>\n        res.json()\n    ).then(res => \n        console.log(res)\n    ).catch(error =>\n        console.log(error)\n    );\n};\n\nformUsers.addEventListener(\"submit\", (e) => {\n    e.preventDefault();\n    const newUsers = {\n        email: e.currentTarget.elements.email.value,\n    };\n    console.log(newUsers);\n    addUsers(newUsers);\n    e.currentTarget.reset();\n    \n});","const favoritesList = document.querySelector(\".favorites-exercises__list\")\nlocalStorage.setItem(\"favorites\", JSON.stringify([{ 'name': 'ga' }]))\nif (localStorage.getItem(\"favorites\")) {\n    const favorites = JSON.parse(localStorage.getItem(\"favorites\"))\n    if (favorites.length) {\n        favoritesMarkUp(favorites)\n    } else {\n        favoritesList.innerHTML = `<div class=\"favorites-info\">\n        <img class=\"favorites-info-img\" src=\"../../images/favorites/dumbbell.png\" alt=\"dumbbell\">\n        <p class=\"favorites-info-text\">It appears that you haven't added any exercises to your favorites yet. To get started, you can add exercises that you like to your favorites for easier access in the future😊</p>\n    </div>`\n    }\n} else {\n    favoritesList.innerHTML = `<div class=\"favorites-info\">\n        <img class=\"favorites-info-img\" src=\"./images/favorites/dumbbell.png\" alt=\"dumbbell\">\n        <p class=\"favorites-info-text\">It appears that you haven't added any exercises to your favorites yet. To get started, you can add exercises that you like to your favorites for easier access in the future😊</p>\n    </div>`\n}\n\nfunction favoritesMarkUp(array) {\n    const markUp = array.map(item =>\n        `<li class=\"exercises__item\">\n        <div class=\"exercises__wrap\">\n            <h3 class=\"exercises-card__title\">${item.name}</h3>\n            <p class=\"exercises-card__category\">${item.filter}</p>\n        </div>\n       </li>`\n    )\n    favoritesList.innerHTML = markUp.join(\"\")\n}"],"names":["$6ff6c4f9bba1ed17$export$2e2bcd8739ae039","url","res","fetch","json","err","console","log","$09f6f309be53b353$var$exercisesListRef","document","querySelector","$09f6f309be53b353$var$exercisesPaginationRef","$09f6f309be53b353$export$2e2bcd8739ae039","activeButton","loadExercises","then","data","innerHTML","results","forEach","exercise","insertAdjacentHTML","name","filter","toUpperCase","slice","exerciseItem","style","backgroundImage","imgUrl","setupPagination","totalPages","i","classList","add","addEventListener","evt","target","nodeName","remove","page","textContent","$15a2abf3cf29a423$var$exercisesListRef","$15a2abf3cf29a423$var$exercisesPaginationRef","$96f49549919f5a6c$var$exercisesListRef","$96f49549919f5a6c$var$exercisesBtnsListRef","$96f49549919f5a6c$var$exercisesPaginationRef","hasAttribute","rating","burnedCalories","time","bodyPart","$54de3f865ab67589$var$formUsers","e","preventDefault","newUsers","email","currentTarget","elements","value","method","body","JSON","stringify","headers","catch","error","reset","$6befdf793f7dd1b0$var$favoritesList","localStorage","setItem","getItem","favorites","parse","length","$6befdf793f7dd1b0$var$favoritesMarkUp","array","markUp","map","item","join","exercises","js","main"],"version":3,"file":"fovorites.5c1fd21b.js.map"}